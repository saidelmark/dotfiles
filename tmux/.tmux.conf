# vim: foldmethod=marker

# {{{ Navigation and pane management
# {{{ Navigate inside window
bind-key -N "Select pane to the left"  "h"   select-pane -L
bind-key -N "Select pane to the left"  "C-h" select-pane -L
bind-key -N "Select pane below"        "j"   select-pane -D
bind-key -N "Select pane below"        "C-j" select-pane -D
bind-key -N "Select pane to the right" "k"   select-pane -U
bind-key -N "Select pane to the right" "C-k" select-pane -U
bind-key -N "Select pane above"        "l"   select-pane -R
bind-key -N "Select pane above"        "C-l" select-pane -R
# }}}
# {{{ Move windows
bind-key -N "Move window to the left"  -r "<" swap-window -d -t -1
bind-key -N "Move window to the right" -r ">" swap-window -d -t +1
# }}}
# {{{ Sane splitting
bind-key -N "Split pane with a vertical line"     "\\" split-window -h  -c "#{pane_current_path}"
bind-key -N "Split window with a vertical line"   "|"  split-window -fh -c "#{pane_current_path}"
bind-key -N "Split pane with a horizontal line"   "-"  split-window -v  -c "#{pane_current_path}"
bind-key -N "Split window with a horizontal line" "_"  split-window -fv -c "#{pane_current_path}"
# }}}
# {{{ Create new window
bind-key -N "Create new window right after the current one"           "C-c"   new-window -a -c "#{pane_current_path}"
bind-key -N "Create new window right after the current one in \$HOME" "c"     new-window -a
bind-key -N "Create new window at the end of the list"                "C"     new-window    -c "#{pane_current_path}"
bind-key -N "Create new window at the end of the list in \$HOME"      "C-M-c" new-window
# }}}
# }}}
# {{{ Terminal colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:RGB"
# }}}
# {{{ Set prefix
unbind C-b
set -g prefix C-f
bind C-f send-prefix
# }}}

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
set -g pane-base-index 1

set -g history-limit 10000
set -g mouse on
set -g focus-events on

# taken from discussion https://github.com/tmux/tmux/issues/1333
# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man"
bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                    "send -t= Up Up Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                    "send -t= Down Down Down" "send -Mt="'

bind C-p previous-window
bind C-n next-window

bind r source-file ~/.tmux.conf \; display "Reloaded configuration"

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# set -g @prefix_highlight_prefix_prompt 'Wait'
set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'

set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-restore 'off'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

