# vim: foldmethod=marker

# {{{ Navigation and pane management
# {{{ Navigate inside window
set -g pane-base-index 1
bind-key -N "Select pane to the left"  "h"   select-pane -L
bind-key -N "Select pane to the left"  "C-h" select-pane -L
bind-key -N "Select pane below"        "j"   select-pane -D
bind-key -N "Select pane below"        "C-j" select-pane -D
bind-key -N "Select pane to the right" "k"   select-pane -U
bind-key -N "Select pane to the right" "C-k" select-pane -U
bind-key -N "Select pane above"        "l"   select-pane -R
bind-key -N "Select pane above"        "C-l" select-pane -R
# }}}
# {{{ Navigate windows
set -g base-index 1
bind-key -N "Select window 10" 0 select-window -t :=10
bind C-p previous-window
bind C-n next-window
# }}}
# {{{ Move windows
bind-key -N "Move window to the left"  -r "<" swap-window -d -t -1
bind-key -N "Move window to the right" -r ">" swap-window -d -t +1
# }}}
# {{{ Sane splitting
bind-key -N "Split pane with a vertical line"     "\\" split-window -h  -c "#{pane_current_path}"
bind-key -N "Split window with a vertical line"   "|"  split-window -fh -c "#{pane_current_path}"
bind-key -N "Split pane with a horizontal line"   "-"  split-window -v  -c "#{pane_current_path}"
bind-key -N "Split window with a horizontal line" "_"  split-window -fv -c "#{pane_current_path}"
# }}}
# {{{ Create new window
bind-key -N "Create new window right after the current one"           "C-c"   new-window -a -c "#{pane_current_path}"
bind-key -N "Create new window right after the current one in \$HOME" "c"     new-window -a
bind-key -N "Create new window at the end of the list"                "C"     new-window    -c "#{pane_current_path}"
bind-key -N "Create new window at the end of the list in \$HOME"      "C-M-c" new-window
# }}}
# }}}
# {{{ Terminal colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:RGB"
# }}}
# {{{ Set prefix
unbind C-b
set -g prefix C-f
bind C-f send-prefix
# }}}
# {{{ Sensible defaults
set -s escape-time 0
# Show tmux messages for 4 seconds
set -g display-time 4000
set -g status-keys emacs
set -g history-limit 10000
set -g focus-events on
bind r source-file ~/.tmux.conf \; display "Reloaded configuration"
# }}}
# {{{ Mouse
set -g mouse on
# {{{ Stay in copy-mode when selecting with mouse.
# Selecting with double and triple clicks still exits copy-mode.
# But when I show other people something from history, I want to stay there.
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# }}}
# {{{ Wheel fix
# taken from discussion https://github.com/tmux/tmux/issues/1333
# Emulate scrolling by sending up and down keys if these commands are running in the pane
tmux_commands_with_legacy_scroll="nano less more man"
bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                    "send -t= Up Up Up" "copy-mode -et="'
bind-key -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
                    "send -t= Down Down Down" "send -Mt="'
# }}}
# }}}

# {{{ Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# }}}

# {{{ Status
# {{{ Prefix highlight
set -g @prefix_highlight_empty_prompt   '    '
set -g @prefix_highlight_prefix_prompt  'Wait'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt    'Copy'
# I almost never use sync mode, so it would be good to see if I'm there
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_prompt    'Sync'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=red'
# append prefix_highlight message to left status
set -ag status-left '#{prefix_highlight}'
# }}}
# }}}

set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'off'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
