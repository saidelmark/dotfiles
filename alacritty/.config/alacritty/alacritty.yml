# Configuration for Alacritty, the GPU enhanced terminal emulator.

# I'm exploiting yaml feature
# every scheme that I have here has an anchor
# And in "colors" I simply name a scheme I want
schemes:
  monokai_dark: &monokai_dark
    primary:
      background: '0x272822'
      foreground: '0xF8F8F2'
    normal:
      black:   '0x272822'
      red:     '0xF92672'
      green:   '0xA6E22E'
      yellow:  '0xF4BF75'
      blue:    '0x66D9EF'
      magenta: '0xAE81FF'
      cyan:    '0xA1EFE4'
      white:   '0xF8F8F2'
    bright:
      black:   '0x75715E'
      red:     '0xF92672'
      green:   '0xA6E22E'
      yellow:  '0xF4BF75'
      blue:    '0x66D9EF'
      magenta: '0xAE81FF'
      cyan:    '0xA1EFE4'
      white:   '0xF9F8F5'
    cursor:
      # text: '0x000000'
      cursor: '0x848484'
    selection:
      # text: '0xeaeaea'
      background: '0x404040'
  afterglow: &afterglow
    primary:
      background: '#2c2c2c'
      foreground: '#d6d6d6'
      dim_foreground:    '#dbdbdb'
      bright_foreground: '#d9d9d9'
      dim_background:    '#202020' # not sure
      bright_background: '#3a3a3a' # not sure
    cursor:
      text:   '#2c2c2c'
      cursor: '#d9d9d9'
    normal:
      black:   '#1c1c1c'
      red:     '#bc5653'
      green:   '#909d63'
      yellow:  '#ebc17a'
      blue:    '#7eaac7'
      magenta: '#aa6292'
      cyan:    '#86d3ce'
      white:   '#cacaca'
    bright:
      black:   '#636363'
      red:     '#bc5653'
      green:   '#909d63'
      yellow:  '#ebc17a'
      blue:    '#7eaac7'
      magenta: '#aa6292'
      cyan:    '#86d3ce'
      white:   '#f7f7f7'
    dim:
      black:   '#232323'
      red:     '#74423f'
      green:   '#5e6547'
      yellow:  '#8b7653'
      blue:    '#556b79'
      magenta: '#6e4962'
      cyan:    '#5c8482'
      white:   '#828282'
  argonaut: &argonaut
    primary:
      background: '#292C3E'
      foreground: '#EBEBEB'
    cursor:
      text:   '#2c2c2c'
      cursor: '#d9d9d9'
    normal:
      black:   '#0d0d0d'
      red:     '#FF301B'
      green:   '#A0E521'
      yellow:  '#FFC620'
      blue:    '#1BA6FA'
      magenta: '#8763B8'
      cyan:    '#21DEEF'
      white:   '#EBEBEB'
    bright:
      black:   '#6D7070'
      red:     '#FF4352'
      green:   '#B8E466'
      yellow:  '#FFD750'
      blue:    '#1BA6FA'
      magenta: '#A578EA'
      cyan:    '#73FBF1'
      white:   '#FEFEF8'
  ayu_dark: &ayu_dark
    primary:
      background: '#0A0E14'
      foreground: '#B3B1AD'
    normal:
      black: '#01060E'
      red: '#EA6C73'
      green: '#91B362'
      yellow: '#F9AF4F'
      blue: '#53BDFA'
      magenta: '#FAE994'
      cyan: '#90E1C6'
      white: '#C7C7C7'
    bright:
      black: '#686868'
      red: '#F07178'
      green: '#C2D94C'
      yellow: '#FFB454'
      blue: '#59C2FF'
      magenta: '#FFEE99'
      cyan: '#95E6CB'
      white: '#FFFFFF'
  blood_moon: &blood_moon
    transparent_background_colors: true
    primary:
      background: '0x10100E'
      foreground: '0xC6C6C4'
    normal:
      black:   '0x10100E'
      red:     '0xC40233'
      green:   '0x009F6B'
      yellow:  '0xFFD700'
      blue:    '0x0087BD'
      magenta: '0x9A4EAE'
      cyan:    '0x20B2AA'
      white:   '0xC6C6C4'
    bright:
      black:   '0x696969'
      red:     '0xFF2400'
      green:   '0x03C03C'
      yellow:  '0xFDFF00'
      blue:    '0x007FFF'
      magenta: '0xFF1493'
      cyan:    '0x00CCCC'
      white:   '0xFFFAFA'
  campbell: &campbell
    primary:
      background: '0x0c0c0c'
      foreground: '0xcccccc'
    normal:
      black:      '0x0c0c0c'
      red:        '0xc50f1f'
      green:      '0x13a10e'
      yellow:     '0xc19c00'
      blue:       '0x0037da'
      magenta:    '0x881798'
      cyan:       '0x3a96dd'
      white:      '0xcccccc'
    bright:
      black:      '0x767676'
      red:        '0xe74856'
      green:      '0x16c60c'
      yellow:     '0xf9f1a5'
      blue:       '0x3b78ff'
      magenta:    '0xb4009e'
      cyan:       '0x61d6d6'
      white:      '0xf2f2f2'
  hyper: &hyper
    primary:
      background: '0x000000'
      foreground: '0xffffff'
    cursor:
      text: '0xF81CE5'
      cursor: '0xffffff'
    normal:
      black:   '0x000000'
      red:     '0xfe0100'
      green:   '0x33ff00'
      yellow:  '0xfeff00'
      blue:    '0x0066ff'
      magenta: '0xcc00ff'
      cyan:    '0x00ffff'
      white:   '0xd0d0d0'
    bright:
      black:   '0x808080'
      red:     '0xfe0100'
      green:   '0x33ff00'
      yellow:  '0xfeff00'
      blue:    '0x0066ff'
      magenta: '0xcc00ff'
      cyan:    '0x00ffff'
      white:   '0xFFFFFF'
  pencil: &pencil
    primary:
      background: '0x212121'
      foreground: '0xf1f1f1'
    normal:
      black:   '0x212121'
      red:     '0xc30771'
      green:   '0x10a778'
      yellow:  '0xa89c14'
      blue:    '0x008ec4'
      magenta: '0x523c79'
      cyan:    '0x20a5ba'
      white:   '0xe0e0e0'
    bright:
      black:   '0x818181'
      red:     '0xfb007a'
      green:   '0x5fd7af'
      yellow:  '0xf3e430'
      blue:    '0x20bbfc'
      magenta: '0x6855de'
      cyan:    '0x4fb8cc'
      white:   '0xf1f1f1'
  terminal: &terminal
    primary:
      background: '0x000000'
      foreground: '0xb6b6b6'
    normal:
      black:   '0x000000'
      red:     '0x990000'
      green:   '0x00a600'
      yellow:  '0x999900'
      blue:    '0x0000b2'
      magenta: '0xb200b2'
      cyan:    '0x00a6b2'
      white:   '0xbfbfbf'
    bright:
      black:   '0x666666'
      red:     '0xe50000'
      green:   '0x00d900'
      yellow:  '0xe5e500'
      blue:    '0x0000ff'
      magenta: '0xe500e5'
      cyan:    '0x00e5e5'
      white:   '0xe5e5e5'


# colors: *pencil
colors: *blood_moon

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  opacity: 0.9

  padding:
    x: 1
    y: 1

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: false

  # Window title
  #title: Alacritty

  # Window class (Linux/BSD only):
  class:
    # Application instance name
    instance: Alacritty
    # General application class
    general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

#scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  #history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
# Sadly, alacritty devs removed this option and hardcoded it's value to 8
# tabspaces: 4

# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    family: JetBrains Mono

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace
    family: JetBrains Mono

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace
    family: JetBrains Mono

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace
    family: JetBrains Mono

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
  size: 14.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
   x: -1
   y: -1

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

# If `true`, bold text is drawn using the bright color variants.
#draw_bold_text_with_bright_colors: false


# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

#cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.
key_bindings:
  # (Windows, Linux, and BSD only)
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: Insert,   mods: Shift,         action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  # - { key: Add,      mods: Control|Shift,       action: IncreaseFontSize }
  # - { key: Subtract, mods: Control|Shift,       action: DecreaseFontSize }
  - { key: Minus,    mods: Control,       action: DecreaseFontSize }

  #- { key: Paste,                    action: Paste                            }
  #- { key: Copy,                     action: Copy                             }
  #- { key: L,         mods: Control, action: ClearLogNotice                   }
  #- { key: L,         mods: Control, chars: "\x0c"                            }
  - { key: K,    mods: Control|Shift,   action: ScrollLineUp,   mode: ~Alt       }
  - { key: J,    mods: Control|Shift,   action: ScrollLineDown, mode: ~Alt       }
  - { key: U,    mods: Control|Shift,   action: ScrollPageUp,   mode: ~Alt       }
  - { key: D,    mods: Control|Shift,   action: ScrollPageDown, mode: ~Alt       }
  #- { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
  #- { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }
